<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">

    <script type="text/javascript" src="components/jquery/dist/jquery.min.js"></script>
    <link rel="stylesheet" href="css/bootstrap.min.css">
    <script src="js/jquery.min.js"></script>
    <script src="js/bootstrap.bundle.js"></script>
    <script src="js/jquery.gridly.js" type="text/javascript"></script>
    <link href="css/jquery.gridly.css" rel="stylesheet" type="text/css" />
    <link href="css/indStyle.css" rel="stylesheet" type="text/css" />
    <script src="components/jquery-ui-1.12.1/jquery-ui.js"></script>
    <link href="https://fonts.googleapis.com/css?family=Montserrat" rel="stylesheet">
</head>

<body>
    <script>

        function timer() {

            // console.log('function is being called');
            $.ajax({
                url: "http://localhost:1337/bg",
                success: function (data) {
                    $('#bgi').fadeOut(function () {
                        //add date to end of get to circumvent caching issues and not loading new img
                        $("#bgi").attr('src', 'http://localhost:1337/bg?' + new Date().getTime());
                        $('#bgi').fadeIn();
                    });
                },
                error: function () {

                }
            });
        }

        var time = <%= config.timer %>;
        setInterval(timer, time);

        function startClock() {
            var today = new Date();
            var hh = today.getHours();
            var mm = today.getMinutes();
            hh = checkTime(hh);
            mm = checkTime(mm);

            var day = today.getDate();
            var month = new Array();

            month[0] = "January";
            month[1] = "February";
            month[2] = "March";
            month[3] = "April";
            month[4] = "May";
            month[5] = "June";
            month[6] = "July";
            month[7] = "August";
            month[8] = "September";
            month[9] = "October";
            month[10] = "November";
            month[11] = "December";

            var monthName = month[today.getMonth()];
            var year = today.getFullYear();

            document.getElementById("time").innerHTML = hh + ":" + mm;
            document.getElementById("date").innerHTML = day + " " + monthName + " " + year;
            var t = setTimeout(startClock, 500);
        }

        function checkTime(i) {
            if (i < 10) { i = "0" + i };
            return i;
        }

        function r(f) { /in/.test(document.readyState) ? setTimeout('r(' + f + ')', 9) : f() }
        r(function () {
            startClock();

            setRandomSelectedCircle();

            document.getElementById("search").focus();

            $('.gridly').gridly({
                base: 20, // px 
                gutter: 30, // px
                columns: 12,
                callbacks: { reordering: reordering, reordered: reordered }
            });

            $('.circle').click(function (e) {
                console.log(e.target);
                if ($(e.target).hasClass('selectedCircle')) {
                    return;
                } else {
                    $('.circle').removeClass('selectedCircle');
                    $(e.target).addClass('selectedCircle');
                    $('#bookmarkColor').val($(e.target).attr('class').split(' ')[1]);
                }
            });


            var mouseStatus = 'up';
            var mouseTimeout;

            var bricks = document.getElementsByClassName("brick");

            for (var i = 0; i < bricks.length; i++) {
                bricks[i].addEventListener("mousedown", function () {
                    //clearTimeout(mouseInterval);
                    mouseStatus = 'down';
                    mouseTimeout = setTimeout(function () {
                        mouseStatus = 'longDown';
                        reorderingBricks = true;
                    }, 100);
                }, false);
                bricks[i].addEventListener("mouseup", function () {
                    clearTimeout(mouseTimeout);
                    setTimeout(function () {
                        mouseStatus = 'up';
                        reorderingBricks = false
                    }, 500)

                }, false);

            }

        });

        function setRandomSelectedCircle() {
            $('.circle').removeClass('selectedCircle');
            var selected = Math.floor((Math.random() * $('.circle').length));
            $($('.circle').get(selected)).addClass('selectedCircle');
        }

        function isEquivalent(a, b) {
            // Create arrays of property names
            var aProps = Object.getOwnPropertyNames(a);
            var bProps = Object.getOwnPropertyNames(b);

            // If number of properties is different,
            // objects are not equivalent
            if (aProps.length != bProps.length) {
                return false;
            }

            for (var i = 0; i < aProps.length; i++) {
                var propName = aProps[i];

                // If values of same property are not equal,
                // objects are not equivalent
                if (a[propName] !== b[propName]) {
                    return false;
                }
            }

            // If we made it this far, objects
            // are considered equivalent
            return true;
        }


        var elements = [];
        var reorderingBricks = false;


        //set order of elements
        var reordering = function ($elements) {
            elements = $elements;
        };

        //check if order of elements has changed.
        //if no, return
        //if yes, post to server and write changes
        var reordered = function ($elements) {
            if (isEquivalent($elements, elements)) {
                return;
            } else {
                var bricks = [];
                for (var i = 0; i < $elements.length; i++) {
                    var name = $elements[i].id;
                    var url = $elements[i].getAttribute('data-url');
                    var color = $elements[i].style.backgroundColor;
                    var size = $elements[i].className.split(' ')[1];
                    var json = { name: name, url: url, color: color, size: size };
                    bricks.push(json);
                }
                $.ajax({
                    url: "/bricks",
                    type: "POST",
                    data: { "bricks": bricks }
                });
            }

        };

        function showWidgetPanel() {
            $(".expandable").show('slide', { direction: "right" }, 500);
        }

        function hideWidgetPanel() {
            $(".expandable").hide('slide', { direction: 'right' }, 500);
            endEditingWidgets();
        }

        function redirect(url) {
            console.log("redir");
            if (reorderingBricks)
                return
            else
                window.location = url;
        }

        function submitBookmarkForm() {
            var name = $('#bookmarkName').val();
            var url = $('#bookmarkURL').val();
            var color = $('#bookmarkColor').val();
            var size = "small";
            var brick = { name: name, url: url, color: color, size: size };
            var bJSON = JSON.stringify(brick);
            $.ajax({
                url: "/bookmark",
                type: "POST",
                data: { "brick": brick },
            });

            $('.gridly').append("<div id=\"" + name + "\" data-url=\"" + url + "\" class=\"brick " + size + "\" onclick=redirect(this.getAttribute('data-url')) style=\"background-color: " + color + "\"><img src=\"res/gear.png\" class=\"tinyIcon hidden\" alt=\"g\" style=\"position: absolute; left: 5px;\" onclick=\"editBookmark(" + $('.brick').length + ")\" ><img src=\"res/cross.png\" class=\"tinyIcon hidden\" alt=\"x\" style=\"position: absolute; right: 5px;\" onclick=\"removeBookmark(" + $('.brick').length + ")\" ><h1>" + name.charAt(0).toUpperCase() + "</h1><p>" + name + "</p></div>");

            $('.gridly').gridly();

        }

        function submitEditBookmarkForm() {

        }

        var editingBricks = false;

        function editWidgets() {

            if (editingBricks) {
                endEditingWidgets();
                return;
            } else {
                editingBricks = true;
                var bricks = $('.brick');

                for (var i = 0; i < bricks.length; i++) {
                    $(bricks.get(i)).prop('onclick', null); // Removes 'onclick' property if found
                    $(bricks.get(i)).addClass('brickEdit'); // Add edit CSS
                }

                var tinyIcons = $('.tinyIcon');
                for (var j = 0; j < tinyIcons.length; j++) {
                    $(tinyIcons.get(j)).removeClass('hidden');
                    $(tinyIcons.get(j)).addClass('shown');
                    $(tinyIcons.get(j)).hide().fadeIn("slow");
                }
            }


        }

        function endEditingWidgets() {

            if (!editingBricks) {
                return;
            } else {
                var bricks = $('.brick');
                for (var i = 0; i < bricks.length; i++) {
                    $(bricks.get(i)).prop('onclick', 'redirect(this.getAttribute("data-url"))'); // Adds 'onclick' property
                    $(bricks.get(i)).removeClass('brickEdit'); // Remove edit CSS
                }
                var tinyIcons = $('.tinyIcon');
                for (var j = 0; j < tinyIcons.length; j++) {
                    $(tinyIcons.get(j)).removeClass('shown');
                    $(tinyIcons.get(j)).addClass('hidden');
                    $(tinyIcons.get(j)).fadeOut("slow");
                }
                editingBricks = false;
            }
        }

        function editBookmark(index) {
            var i = index;
            var brick;
            $.ajax({
                url: "/data/bricks",
                type: "GET",
                success: function (data) {
                    console.log(data.bricks.bricks[index]);
                    brick = data.bricks.bricks[index];
                    $('.circle').removeClass('selectedCircle');
                    try {
                        $('.circle.' + brick.color).addClass('selectedCircle');
                    } catch (err) {
                        setRandomSelectedCircle();
                    }

                    $('#editBookmarkModal').modal('show');
                    $('#editBookmarkURL').val(brick.url);
                    $('#editBookmarkName').val(brick.name);

                }
            })

        }

        function removeBookmark(index) {

            $.ajax({
                url: "/removeBrick",
                type: "POST",
                data: { index: index },
                success: function (data) {
                    $('.gridly').html('');
                    for (var i = 0; i < data.bricks.bricks.length; i++) {
                        console.log(data.bricks.bricks[i].name)
                        var html = "<div id=\"" + data.bricks.bricks[i].name + "\" data-url=\"" + data.bricks.bricks[i].url + "\" class=\"brick " + data.bricks.bricks[i].size + " hover\" onclick=\"redirect(this.getAttribute('data-url'))\" style=\"background-color: " + data.bricks.bricks[i].color + "\"><img src=\"res/gear.png\" class=\"tinyIcon hidden\" alt=\"g\" style=\"position: absolute; left: 5px;\" onclick=\"editBookmark(" + i + ")\" ><img src=\"res/cross.png\" class=\"tinyIcon hidden\" alt=\"x\" style=\"position: absolute; right: 5px;\" onclick=\"removeBookmark(" + i + ")\" ><h1>" + data.bricks.bricks[i].name.charAt(0).toUpperCase() + "</h1><p>" + data.bricks.bricks[i].name + "</p></div>";
                        document.getElementById("gridlyContainer").innerHTML += html;
                        $('.gridly').gridly();
                    }
                }
            })

        }

    </script>

    <div class="expandable right">
        <div class="container-fluid">
            <div class="row">
                <div class="col-sm-12">
                    <h2>Widgets</h2>
                    <div id="hideGridOpt" onclick="hideWidgetPanel()" style="position: absolute; top: 8px; right:0">
                        <img src="res/cross.png" height="24px" width="24px" alt="X"></img>
                    </div>
                </div>
            </div>
            <div class="row widgetRow mt-3 mx-auto">
                <div class="mx-3 mb-3 widgetBlock" onclick="setRandomSelectedCircle()" data-toggle="modal" data-target="#bookmarkModal">
                    <br>
                    <h4 class="mt-3">Bookmarks</h4>
                    <br>
                    <img src="res/bookmark.png" width="42" height="60" alt=""></img>
                </div>
                <div class="mx-3 mb-3 widgetBlock">
                    widget
                </div>
                <div class="mx-3 widgetBlock">
                    widget
                </div>
            </div>
        </div>
    </div>

    <img id="bgi" src="http://localhost:1337/bg" width="100%" height="100%" onclick="hideWidgetPanel()" onmousedown="return false"
        style="user-drag: none"></img>

    <div class="container-fluid">
        <div class="row top">
            <div class="col-sm-2 ml-5">
                <div id="clock">
                    <div id="time"></div>
                    <div id="date"></div>
                </div>
            </div>
            <div class="col-sm-8">
                <form action="/search" method="post">
                    <input type="text" id="search" name="search" placeholder="Search" style="margin-left:20%; width:50%;" />
                </form>
            </div>
            <div class="col-sm-2">
                <h1></h1>
            </div>
        </div>
    </div>

    <!-- Add Bookmark Modal -->
    <div class="modal fade" id="bookmarkModal">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">

                <!-- Modal body -->
                <div class="modal-body">
                    <h3 style="color: #11b8ff;">Options</h3>
                    <br>
                    <div class="row" style="display:block;">
                        <form id="bookmarkForm" action="/bookmark" method="post" class="mx-5">
                            <p>URL</p>
                            <input type="text" name="url" id="bookmarkURL" />
                            <p>Name</p>
                            <input type="text" name="Name" id="bookmarkName" />
                            <input type="hidden" name="color" id="bookmarkColor" />
                        </form>
                        <p class="ml-5 mb-3">Color</p>
                        <table class="mx-5">
                            <tr>
                                <td>
                                    <div class="circle green"></div>
                                </td>
                                <td>
                                    <div class="circle red"></div>
                                </td>
                                <td>
                                    <div class="circle yellow"></div>
                                </td>
                                <td>
                                    <div class="circle blue"></div>
                                </td>
                                <td>
                                    <div class="circle black"></div>
                                </td>
                            </tr>
                        </table>
                    </div>
                </div>

                <!-- Modal footer -->
                <div class="modal-footer" style="text-align:right">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="submitBookmarkForm()">Save</button>
                </div>

            </div>
        </div>
    </div>

    <!-- Edit Bookmark Modal -->
    <div class="modal fade" id="editBookmarkModal">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">

                <!-- Modal body -->
                <div class="modal-body">
                    <h3 style="color: #11b8ff;">Options</h3>
                    <br>
                    <div class="row" style="display:block;">
                        <form id="editBookmarkForm" action="/editBookmark" method="post" class="mx-5">
                            <p>URL</p>
                            <input type="text" name="url" id="editBookmarkURL" />
                            <p>Name</p>
                            <input type="text" name="Name" id="editBookmarkName" />
                            <input type="hidden" name="color" id="editBookmarkColor" />
                        </form>
                        <p class="ml-5 mb-3">Color</p>
                        <table class="mx-5">
                            <tr>
                                <td>
                                    <div class="circle green"></div>
                                </td>
                                <td>
                                    <div class="circle red"></div>
                                </td>
                                <td>
                                    <div class="circle yellow"></div>
                                </td>
                                <td>
                                    <div class="circle blue"></div>
                                </td>
                                <td>
                                    <div class="circle black"></div>
                                </td>
                            </tr>
                        </table>
                    </div>
                </div>

                <!-- Modal footer -->
                <div class="modal-footer" style="text-align:right">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="submitEditBookmarkForm()">Save</button>
                </div>

            </div>
        </div>
    </div>


    <!-- BRICKS-->

    <div class="container" id="gridContainer">
        <div class="row main">
            <div class="col-xl-12">
                <div class="gridly" id="gridlyContainer">
                    <% for(var i=0; i<bricks.bricks.length; i++){ %>
                        <div id="<%= bricks.bricks[i].name %>" data-url="<%= bricks.bricks[i].url %>" class="brick <%= bricks.bricks[i].size %> hover"
                            onclick="redirect(this.getAttribute('data-url'))" style="background-color: <%= bricks.bricks[i].color %>">
                            <img src="res/gear.png" class="tinyIcon hidden" alt="g" style="position: absolute; left: 5px;" onclick="editBookmark(<%- i %>)">
                            <img src="res/cross.png" class="tinyIcon hidden" alt="x" style="position: absolute; right: 5px;" onclick="removeBookmark(<%- i %>)">
                            <h1>
                                <%= bricks.bricks[i].name.charAt(0).toUpperCase() %>
                            </h1>
                            <p>
                                <%= bricks.bricks[i].name %>
                            </p>
                        </div>
                        <% } %>
                </div>
            </div>
        </div>
    </div>

    <footer class="footer" style="background-color:rgba(0, 0, 0, 0.0);">
        <div class="bottom">
            <div onclick="showWidgetPanel()" id="gridOpts">
                <img src="res/grid.png" width="24" height="24" alt="Grid">
            </div>
            <div onclick="editWidgets()" id="gridOpts">
                <img src="res/gear.png" width="36" height="36" alt="Grid">
            </div>
            <div onclick="location.href='/options'">
                <img src="res/options.png" width="24" height="24" alt="Options">
            </div>
        </div>
    </footer>
</body>

</html>